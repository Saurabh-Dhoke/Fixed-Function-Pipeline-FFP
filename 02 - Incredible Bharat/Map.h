
#pragma once


#include<gl/GL.h>
#include<GL/glu.h>   
#include<math.h>   


#include"Bharat.h"   
#include"Plane.h"   


// Gloabal Variables 
GLfloat Arr[400][2] = { {124,64},
	{129,62},	{124,57},	{117,54},	{111,51},
	{110,44},	{117,40},	{123,38},	{129,37},
	{135,36},	{140,36},	{143,37},	{147,40},
	{148,44},	{147,49},	{152,52},	{158,53},
	{164,53},	{170,51},	{175,49},	{182,49},
	{187,49},	{191,51},	{192,55},	{192,59},
	{188,64},	{183,65},	{180,70},	{179,74},
	{181,77},	{184,82},	{186,84},	{188,88},
	{186,92},	{182,93},	{180,89},	{176,92},
	{176,98},	{180,103},	{186,110},	{194,114},
	{201,117},	{206,119},	{204,125},	{200,132},
	{198,138},	{199,142},	{204,145},	{208,147},
	{213,148},	{218,149},	{222,152},	{226,154},
	{231,157},	{236,158},	{241,158},	{247,159},
	{252,161},	{256,163},	{260,166},	{266,167},
	{271,168},	{276,168},	{281,169},	{286,170},
	{290,169},	{294,168},	{295,163},	{293,159},
	{292,154},	{293,149},	{295,146},	{298,144},
	{302,145},	{301,151},	{302,156},	{307,160},
	{312,161},	{317,161},	{322,160},{327,160},
	{332,159},{337,158},	{339,153},{334,150},
	{335,146},{339,145},	{343,141},{348,138},
	{352,135},{355,130},	{357,125},{361,125},
	{365,125},{368,123},	{373,120},{377,120},
	{380,124},{380,129},	{380,133},{384,134},
	{388,136},{390,140},	{390,145},{392,146},
	{386,146},{380,148},	{376,152},{373,157},
	{373,160},{374,164},	{372,168},{370,173},
	{370,178},{370,183},	{370,188},{368,193},
	{363,194},{360,194},	{358,198},{359,202},
	{359,207},{359,211},	{359,217},{355,219},
	{352,216},{352,213},	{352,208},{351,204},
	{349,200},{345,200},	{342,203},{342,208},
	{342,211},{337,211},	{335,206},{335,201},
	{336,195},{339,191},	{342,191},{346,188},
	{347,182},{343,179},	{337,180},{331,180},
	{325,182},{319,182},	{316,182},{317,179},
	{317,175},{312,172},	{307,171},{304,169},
	{299,172},{299,176},	{303,177},{307,180},
	{306,182},{301,183},	{298,187},{298,192},
	{301,193},{305,194},	{306,198},{306,202},
	{306,206},{308,211},	{310,216},{313,219},
	{314,224},{314,229},	{312,232},{307,234},
	{304,234},{304,234},	{301,231},{304,227},
	{296,231},{292,235},	{289,239},{289,243},
	{290,246},{287,251},	{282,254},{278,257},
	{274,262},{269,266},	{264,268},{263,271}, 
	{260,273},{256,277},	{255,282},{251,286},
	{248,288},{244,291},	{239,294},{234,295},
	{234,299},{234,303},	{230,305},{225,307},
	{220,307},{219,311},	{218,316},{213,314},
	{209,317},{208,322},	{208,327},{208,332},
	{208,337},{208,340},	{208,343},{208,347},
	{210,349},{209,353},	{208,357},{206,360},
	{204,363},{202,366},	{202,369},{203,371},
	{206,373},{206,376},	{203,378},{204,382},
	{204,385},{201,385},	{197,387},{197,391},
	{192,393},{194,396},	{196,398},{191,400},
	{187,401},{184,404},	{183,409},{180,412},
	{176,414},{170,414},	{166,412},{163,409},
	{160,403},{159,396},	{156,392},{156,387},
	{153,382},{152,378},	{149,375},{147,372},
	{145,369},{143,366},	{141,363},{140,359},
	{138,355},{138,351},	{137,347},{136,342},
	{135,338},{134,334},	{131,331},{128,328},
	{128,324},{126,322},	{124,319},{123,316},
	{123,312},{121,308},	{119,304},{118,300},
	{118,297},{116,294},	{114,290},{113,286},
	{113,283},{114,282},	{115,279},{116,274},
	{112,272},{111,269},	{111,264},{114,260},
	{114,255},{113,251},	{113,251},{113,246},
	{112,243},{112,237},	{113,231},{111,227},
	{108,227},{106,232},	{106,236},{105,240},
	{103,245},{99,246},		{95,250},{91,250},
	{86,249},{83,246},		{78,244},{75,241},
	{72,237},{69,236},		{68,232},{66,229},
	{68,226},{71,228},		{75,228},{78,227},
	{81,226},{85,222},		{86,219},{82,220},
	{77,221},{72,221},		{68,221},{65,219},
	{62,216},{58,213},		{58,209},{62,207},
	{65,204},{67,201},		{70,203},{74,203}, 
	{78,202},{81,201},		{88,201},{91,201},
	{92,197},{90,195},		{88,190},{88,187},
	{88,184},{88,181},		{85,181},{83,181},
	{81,179},{81,177},		{82,173},{79,171},
	{77,171},{74,167},		{76,164},{79,160},
	{80,157},{84,155},		{86,155},{90,152},
	{90,155},{92,157},		{96,157},{100,156},
	{104,154},{104,149},	{106,147},{107,143},
	{112,141},{114,139},	{115,136},{115,130},
	{119,128},{121,127},	{127,123},{125,125},
	{127,123},{127,120},	{127,117},{129,117},
	{131,114},{132,112},	{133,108},{132,103},
	{133,99},{133,99},		{136,99},{141,97},
	{138,95},{134,94},		{130,91},{125,88},
	{123,83},{123,78},		{122,73},{120,69},
	{120,69},{121,67 }};

GLfloat Counter = 0.0f;
GLint Cnt = 0;  


//GLboolean flag1 = TRUE;
//GLboolean flag2 = TRUE;
//GLboolean flag3 = TRUE;



// Function definations 


void Start_Map()
{
	// Function declarations 
	void draw_map();
	
	// Code	
	glPushMatrix();		
		glTranslatef(0.0, 0.0, -0.69);

		glColor3f(1, 1, 1);        // white
		draw_map();

		//if (flag1)
		//{
		//	glColor3f(1, 0.4, 0.12);  // orange
		//	draw_map();

		//	if (Cnt >= 385)
		//	{
		//		Cnt = 0;
		//		flag1 = FALSE;
		//		flag2 = TRUE;
		//	}
		//}

		//else if (flag2)
		//{
		//	glColor3f(1, 1, 1);        // white
		//	draw_map();

		//	if (Cnt >= 385)
		//	{
		//		Cnt = 0;
		//		flag2 = FALSE;
		//		flag3 = TRUE;
		//	}
		//}

		//else if (flag3)
		//{
		//	glColor3f(0.02, 0.42, 0.22);      // green
		//	draw_map();

		//	if (Cnt >= 385)
		//		flag3 = FALSE;
		//}		
		//else
		//{
		//	glColor3f(1, 1, 1);        // white
		//	draw_map();

		//}
			
	glPopMatrix();
}

void draw_map()
{
	glLineWidth(3);
	glPushMatrix();

		glRotatef(180, 1, 0, 0);
		glTranslatef(0.070, -0.220, 0.0);
		glScalef(0.550, 0.515, 1);

		//glTranslatef(tx, ty, tz);
		//glScalef(sx, sy, 1);

			glBegin(GL_LINE_STRIP);
				for (int i = 0; i < Cnt; i++)
					glVertex3f(Arr[i][0] / 500.0, Arr[i][1] / 500.0, 0);
			glEnd();
		
			if (Cnt >= 385)
			{
				glBegin(GL_LINES);
					glVertex3f(Arr[384][0] / 500.0, Arr[384][1] / 500.0, 0);
					glVertex3f(Arr[0][0] / 500.0, Arr[0][1] / 500.0, 0);
				glEnd();
			}
	glPopMatrix();
	glLineWidth(1);


	// Animation 
	if (Counter >= 0.80)
		if(Cnt < 385)
			Cnt = Cnt + 1; 

	if (Counter < 0.80)
		Counter = Counter + 0.050;
	else
		Counter = 0.0;
}


